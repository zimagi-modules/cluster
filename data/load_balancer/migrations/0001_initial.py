# Generated by Django 3.2.5 on 2021-07-13 07:03

from django.db import migrations, models
import django.db.models.deletion
import systems.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('network', '0001_initial'),
        ('subnet', '0001_initial'),
        ('group', '0001_initial'),
        ('domain', '0001_initial'),
        ('firewall', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LoadBalancer',
            fields=[
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('id', models.CharField(editable=False, max_length=64, primary_key=True, serialize=False)),
                ('name', models.CharField(editable=False, max_length=256)),
                ('config', systems.models.fields.EncryptedDataField(default={}, editable=False)),
                ('provider_type', models.CharField(editable=False, max_length=128, null=True)),
                ('variables', systems.models.fields.EncryptedDataField(default={}, editable=False)),
                ('state_config', systems.models.fields.EncryptedDataField(default={}, editable=False)),
                ('internal', models.BooleanField(default=False)),
                ('domain', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='loadbalancer_relation', to='domain.domain')),
                ('firewalls', models.ManyToManyField(related_name='loadbalancer_relations', to='firewall.Firewall')),
                ('groups', models.ManyToManyField(related_name='loadbalancer_relations', to='group.Group')),
                ('network', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='loadbalancer_relation', to='network.network')),
                ('subnets', models.ManyToManyField(related_name='loadbalancer_relations', to='subnet.Subnet')),
            ],
            options={
                'verbose_name': 'load balancer',
                'verbose_name_plural': 'load balancers',
                'db_table': 'cluster_load_balancer',
                'ordering': ['name'],
                'abstract': False,
                'unique_together': {('network', 'name')},
            },
        ),
    ]
